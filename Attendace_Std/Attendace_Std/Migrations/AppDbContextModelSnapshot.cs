// <auto-generated />
using System;
using Attendace_Std.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Attendace_Std.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Attendace_Std.Models.Factory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("factories");
                });

            modelBuilder.Entity("Attendace_Std.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("levels");
                });

            modelBuilder.Entity("Attendace_Std.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("specializations");
                });

            modelBuilder.Entity("Attendace_Std.Models.Std_factory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("facId")
                        .HasColumnType("int");

                    b.Property<int>("stdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("facId");

                    b.HasIndex("stdId");

                    b.ToTable("std_Factories");
                });

            modelBuilder.Entity("Attendace_Std.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Repassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("levelId")
                        .HasColumnType("int");

                    b.Property<int?>("specializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("levelId");

                    b.HasIndex("specializationId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Attendace_Std.Models.Student_attendace", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Student_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOnly")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Supervisor_id")
                        .HasColumnType("int");

                    b.Property<int>("fac_id")
                        .HasColumnType("int");

                    b.HasKey("Id", "Student_Id", "DateOnly");

                    b.HasIndex("Student_Id");

                    b.HasIndex("Supervisor_id");

                    b.HasIndex("fac_id");

                    b.ToTable("student_attendaces");
                });

            modelBuilder.Entity("Attendace_Std.Models.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("supervisors");
                });

            modelBuilder.Entity("Attendace_Std.Models.std_supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("stdId")
                        .HasColumnType("int");

                    b.Property<int>("suberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("stdId");

                    b.HasIndex("suberId");

                    b.ToTable("std_Supervisors");
                });

            modelBuilder.Entity("Attendace_Std.Models.Std_factory", b =>
                {
                    b.HasOne("Attendace_Std.Models.Factory", "Factory")
                        .WithMany()
                        .HasForeignKey("facId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Attendace_Std.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("stdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factory");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Attendace_Std.Models.Student", b =>
                {
                    b.HasOne("Attendace_Std.Models.Level", "level")
                        .WithMany()
                        .HasForeignKey("levelId");

                    b.HasOne("Attendace_Std.Models.Specialization", "specialization")
                        .WithMany()
                        .HasForeignKey("specializationId");

                    b.Navigation("level");

                    b.Navigation("specialization");
                });

            modelBuilder.Entity("Attendace_Std.Models.Student_attendace", b =>
                {
                    b.HasOne("Attendace_Std.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("Student_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Attendace_Std.Models.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("Supervisor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Attendace_Std.Models.Factory", "Factory")
                        .WithMany()
                        .HasForeignKey("fac_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factory");

                    b.Navigation("Student");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Attendace_Std.Models.std_supervisor", b =>
                {
                    b.HasOne("Attendace_Std.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("stdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Attendace_Std.Models.Supervisor", "supervisor")
                        .WithMany()
                        .HasForeignKey("suberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("supervisor");
                });
#pragma warning restore 612, 618
        }
    }
}
